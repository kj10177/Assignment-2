import numpy as np
def count_digits(n):
    if n < 10:
        return 1
    else:
        return 1 + count_digits(n // 10)
def find_max(arr):
    if len(arr) == 0:
        return 0
    else:
        max_rest = find_max(arr[1:])
        return arr[0] if arr[0] > max_rest else max_rest
def count_tags(html, tag):
    start_tag = f"<{tag}>"
    end_tag = f"</{tag}>"
    start_index = html.find(start_tag)
    if start_index == -1:
        return 0
    end_index = html.find(end_tag, start_index)
    if end_index == -1:
        return 0
    return 1 + count_tags(html[end_index + len(end_tag):], tag)
def count_normalized_columns(matrix):
    if len(matrix) == 0 or len(matrix[0]) == 0:
        return 0
    num_normalized_columns = 0
    transposed_matrix = np.array(matrix).T
    for column in transposed_matrix:
        mean = np.mean(column)
        std_dev = np.std(column)

        if np.isclose(mean, 0) and np.isclose(std_dev, 1):
            num_normalized_columns += 1
    return num_normalized_columns
while True:
    print("1. Count Digits")
    print("2. Find Max")
    print("3.1. Count Tags")
    print("3.2. Count Normalized Columns")
    print("4. Exit")
    
    choice = input("Enter a choice: ")
    
    if choice == "1":
        num = int(input("Enter an integer: "))
        digit_count = count_digits(num)
        print("The number of digits is:", digit_count)
    elif choice == "2":
        input_list = input("Enter a list of integers separated by spaces: ").split()
        input_list = [int(x) for x in input_list]
        max_value = find_max(input_list)
        print("The maximum value is:", max_value)
    elif choice == "3.1":
        html_code = """<html>
                        <h1>Heading 1</h1>
                        <p>Some text</p>
                        <ul>
                            <li>Item 1</li>
                            <li>Item 2</li>
                            <li>Item 3</li>
                        </ul>
                    </html>"""
        tag = input("Enter the HTML tag: ")
        tag_count = count_tags(html_code, tag)
        print(f"The tag {tag} appears {tag_count} times in the HTML code.")
    elif choice == "3.2":
        matrix = [ [-1.2649110640673518, 5.123451, 43],
                   [-0.6324555320336759, 5.13123123, 4334],
                   [0.0, 6.1543453, 125879],
                   [0.6324555320336759, 0.1231235709, 123544],
                   [1.2649110640673518, 9.1543524234, 55676] ]
        normalized_count = count_normalized_columns(matrix)
        print(f"The number of normalized columns is: {normalized_count}")
    elif choice == "4":
        break
